import org.gradle.internal.os.OperatingSystem;

buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.8.4'
    }
}

apply plugin: 'java'
apply plugin: 'com.jfrog.bintray'
apply plugin: 'maven-publish'

group = 'com.jme3'
version = '3.0.2'

compileJava {
    options.encoding = "UTF-8"
    options.incremental = true
}

sourceCompatibility = JavaVersion.VERSION_11
targetCompatibility = JavaVersion.VERSION_11

ext {
    bintrayVersion = version
    javaFxVersion = "13"
}

repositories {
    mavenCentral()
    mavenLocal()
    jcenter()
    maven { url 'https://jitpack.io' }
}

publishing {
    publications {
        LibArtifact(MavenPublication) {
            from components.java
            groupId group
            artifactId 'jfx'
            version bintrayVersion
            afterEvaluate {
                artifact sourcesJar
                artifact javadocJar
            }
        }
    }
}

bintray {
    user = System.getProperty('bintrayUser')
    key = System.getProperty('bintrayKey')
    publications = ['LibArtifact']
    pkg {
        repo = 'maven'
        name = 'com.jme3.jfx'
        licenses = ['Apache-2.0']
        websiteUrl = 'https://github.com/JavaSaBr/JME3-JFX'
        vcsUrl = 'https://github.com/JavaSaBr/JME3-JFX.git'
        issueTrackerUrl = 'https://github.com/JavaSaBr/JME3-JFX/issues'
        githubRepo = 'JavaSaBr/JME3-JFX'
        githubReleaseNotesFile = 'README.md'
        version {
            name = bintrayVersion
            desc = bintrayVersion
            released  = new Date()
        }
    }
}

dependencies {
    def targetArch = project.hasProperty('targetArch') ? project.property("targetArch") : 'x64'

    def osName = ""
    if (OperatingSystem.current().isLinux()) {
        osName = "linux"
    } else if (OperatingSystem.current().isMacOsX()) {
        osName = "mac"
    } else if (OperatingSystem.current().isWindows()) {
        osName = "win"
    }

    implementation  "org.jetbrains:annotations:21.0.1"
    implementation 'com.github.wizzardo.RLib:rlib.common:master-SNAPSHOT'
    implementation 'com.github.wizzardo.RLib:rlib.logger.impl:master-SNAPSHOT'
    implementation  "org.jmonkeyengine:jme3-core:3.4.0-stable"
    implementation  "org.jmonkeyengine:jme3-lwjgl3:3.4.0-stable"

    if (targetArch == "x64" || targetArch == "x86") {
        implementation "org.openjfx:javafx-base:$javaFxVersion:${osName}"
        implementation "org.openjfx:javafx-controls:$javaFxVersion:${osName}"
        implementation "org.openjfx:javafx-graphics:$javaFxVersion:${osName}"
    }
}

javadoc {
    failOnError = false
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

wrapper {
    gradleVersion = '6.1.1'
}
